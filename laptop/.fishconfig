if status is-interactive
    # Commands to run in interactive sessions can go here
end

#custom aliases
alias mars="java -jar ~/Downloads/Mars4_5.jar"
alias sshbbb="ssh debian@192.168.7.2"
alias sshbbb1="ssh debian@192.168.8.2"
alias sshbbb2="ssh debian@192.168.9.2"
alias uniwork="cd ~/work/computing-work"
alias ics="cd ~/work/computing-work/year2/ics"
alias iads="cd ~/work/computing-work/year2/iads"
alias fds="cd ~/work/computing-work/year2/fds"
alias sepp="cd ~/work/computing-work/year2/sepp"
alias hyped22="cd ~/work/hyped-2022; code .; cd build; make -j"
alias hyped23="cd ~/work/hyped-2023; code .; cd build; make -j"
alias code="code ."
alias editfish="nano ~/.fishconfig; . ~/.fishconfig"
alias bat="cat /sys/class/power_supply/BAT0/capacity"
alias gui="gnome-shell --wayland"
alias shutdown="sudo shutdown now"
alias make="make -j"
alias aoc="cd ~/work/advent-of-code/rust"
alias tc="ping -c 1 archlinux.org"
alias bt=bluetoothctl
alias rebuild="cd ~/work/hyped-2023; rm -rf build; mkdir build; cd build; cmake ..; make -j"
alias htb="sudo echo; cd ~/work/random-stuff/htb; gnome-terminal --tab -- bash -c 'cd ~/work/random-stuff/htb; exec bash'; sudo openvpn starting_point_Infernox91645.ovpn"
alias gp="git push"
alias isa="cd ~/work/isa; code .; tab ./isa.wiki; tab ./simulator"
alias gl="git log --all --oneline --graph --decorate"
alias gpr="gh pr create"

#abbreviations
abbr -a gc git commit -m
abbr -a gs git status
abbr -a gb git branch
abbr -a ef editfish
abbr -a ga git add
abbr -a ff firefox
abbr -a pacman sudo pacman

#functions
function gfa
    set -l path "$(git rev-parse --show-toplevel)"
    echo "$path"
    git add "$path/$argv"
    git clang-format
    git add "$path/$argv"
end

function gbp
    set -l path "$(pwd)"
    cd /home/infernox/work/hyped-2023/build
    if make -j
        git push
    else
	set_color red
	echo "Build failed. Push anyway? [y/n]: "
        read --nchars 1 -l response
        if test "$response" = y; or test "$response" = Y
            git push
        end
    end
    cd $path
end

function gcp
    git checkout $argv
    git pull
end

function ros2_on
    export ROS_DOMAIN_ID=42
    export ROS_VERSION=2
    export ROS_PYTHON_VERSION=3
    export ROS_DISTRO=foxy
    source /opt/ros2/foxy/setup.bash
end
